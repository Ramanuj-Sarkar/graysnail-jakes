"This is the number entered."
POP a number a000
"#This shows the number during output and is updated when the command is o."
POP a "show number" a
"#I use carry to indicate repetition for incrementing (9 to 0) and decrementing (0 to 9)."
POP a carry a0
"#This is the only thing that is output. All input goes in here."
POP a "all input" a""

"input more commands"
OUTPUT "[all input]"
INPUT commands

"analyse commands"
OUTPUT "[all input]"
POP instruction commands [commands]
GOTO "input more commands" [instruction] ""
GOTO ". command" [instruction] .

"#These are all the digits of the number."
"#Temp is used in case the command is not valid."
POP a temp a[number]
POP hundreds temp [temp]
POP tens temp [temp]
POP ones temp [temp]
GOTO "+- command" [instruction] +
GOTO "+- command" [instruction] -

". command"
POP a "all input" a"[all input][number]"
GOTO "analyse commands"

"+- command"
POP a "all input" a"[all input][instruction][newline]>>"
POP a digit aones
"#This will go to + 1, - 1, + 2, - 2, etc. depending on what instruction and ones are."
GOTO "[instruction] [ones]"
"finished with one operation"
"#If carry = 0, I can stop doing this."
GOTO "completely finished" [carry] 0
"#If digit is hundreds, no more changing is possible."
GOTO "completely finished" [digit] hundreds
"#This is in case we have just changed tens, so we have to change hundreds."
GOTO "digit is tens" [digit] tens
POP a digit atens
GOTO "[instruction] [tens]"
"digit is tens"
POP a digit ahundreds
GOTO "[instruction] [hundreds]"

"completely finished"
"#In DeadFish implementation, 256 and 0-1 (999 in this case) become 0."
GOTO "to 000" [hundreds][tens][ones] 256
GOTO "to 255" [hundreds][tens][ones] 999
POP a number a[hundreds][tens][ones]
"number is changed"
POP a carry a0
GOTO "analyse commands"

"#Number is just set to something else."
"to 000"
POP a number a000
GOTO "number is changed"
"to 255"
POP a number a255
GOTO "number is changed"

"#From here on out, the code consists of single commands which do one or two operations."

"#The variable carry becomes 1 here."
"- 0"
POP a [digit] a9
POP a carry a1
GOTO "finished with one operation"
"- 1"
POP a [digit] a0
POP a carry a0
GOTO "finished with one operation"
"- 2"
POP a [digit] a1
POP a carry a0
GOTO "finished with one operation"
"- 3"
POP a [digit] a2
POP a carry a0
GOTO "finished with one operation"
"- 4"
POP a [digit] a3
POP a carry a0
GOTO "finished with one operation"
"- 5"
POP a [digit] a4
POP a carry a0
GOTO "finished with one operation"
"- 6"
POP a [digit] a5
POP a carry a0
GOTO "finished with one operation"
"- 7"
POP a [digit] a6
POP a carry a0
GOTO "finished with one operation"
"- 8"
POP a [digit] a7
POP a carry a0
GOTO "finished with one operation"
"- 9"
POP a [digit] a8
POP a carry a0
GOTO "finished with one operation"

"#The variable carry becomes 1 here."
"+ 0"
POP a [digit] a1
POP a carry a0
GOTO "finished with one operation"
"+ 1"
POP a [digit] a2
POP a carry a0
GOTO "finished with one operation"
"+ 2"
POP a [digit] a3
POP a carry a0
GOTO "finished with one operation"
"+ 3"
POP a [digit] a4
POP a carry a0
GOTO "finished with one operation"
"+ 4"
POP a [digit] a5
POP a carry a0
GOTO "finished with one operation"
"+ 5"
POP a [digit] a6
POP a carry a0
GOTO "finished with one operation"
"+ 6"
POP a [digit] a7
POP a carry a0
GOTO "finished with one operation"
"+ 7"
POP a [digit] a8
POP a carry a0
GOTO "finished with one operation"
"+ 8"
POP a [digit] a9
POP a carry a0
GOTO "finished with one operation"
"+ 9"
POP a [digit] a0
POP a carry a1
GOTO "finished with one operation"
end
