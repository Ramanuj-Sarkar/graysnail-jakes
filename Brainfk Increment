"#I use carry to indicate 9 has been incremented to 0."
POP a carry a0
INPUT number

"#These are all the digits of the number."
POP hundreds number [number]
POP tens number [number]
POP ones number [number]

POP a digit aones
"#This will go to increment 1, increment 2, etc. depending on what ones is."
GOTO "increment [ones]"
"finished with increment"
"#If carry = 0, I can stop incrementing."
GOTO "completely finished with increment" [carry] 0
"#I have decided Brainfk won't have things larger than 256."
GOTO "completely finished with increment" [digit] hundreds
"#This is in case we have just incremented tens, so we have to increment hundreds."
GOTO "digit is tens" [digit] tens
POP a digit atens
GOTO "increment [tens]"
"digit is tens"
POP a digit ahundreds
GOTO "increment [hundreds]"
"completely finished with increment"

"#In this Brainfk implementation, 256 turns to 000."
GOTO "256 to 000" [hundreds][tens][ones] 256
POP a numbers a[hundreds][tens][ones]
"numbers is incremented"
OUTPUT [numbers]
POP a carry a0
GOTO end

"This is the place where 256 is wrapped around to 000."
"256 to 000"
POP a numbers a000
GOTO "numbers is incremented"

"#The variable carry becomes 1 only after 9."
"increment 0"
POP a [digit] a1
POP a carry a0
GOTO "finished with increment"

"increment 1"
POP a [digit] a2
POP a carry a0
GOTO "finished with increment"

"increment 2"
POP a [digit] a3
POP a carry a0
GOTO "finished with increment"

"increment 3"
POP a [digit] a4
POP a carry a0
GOTO "finished with increment"

"increment 4"
POP a [digit] a5
POP a carry a0
GOTO "finished with increment"

"increment 5"
POP a [digit] a6
POP a carry a0
GOTO "finished with increment"

"increment 6"
POP a [digit] a7
POP a carry a0
GOTO "finished with increment"

"increment 7"
POP a [digit] a8
POP a carry a0
GOTO "finished with increment"

"increment 8"
POP a [digit] a9
POP a carry a0
GOTO "finished with increment"

"increment 9"
POP a [digit] a0
POP a carry a1
GOTO "finished with increment"
end
